AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 application resources such as ALB, etc

Parameters:
  Environment:
    Type: String
    Description: The environment
    Default: test
  SslCertificateArn:
    Type: String
    Description: SSL certificate ARN
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC Id
  VpcSubnetList:
    Type: CommaDelimitedList
    Description: List of VPC subnets to use for cache subnet group
  VpcSecurityGroupList:
    Type: CommaDelimitedList
    Description: List of VPC security group IDs

Resources:
  Elb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: "internet-facing"
      SecurityGroups: !Ref VpcSecurityGroupList
      Subnets: !Ref VpcSubnetList
      Type: "application"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: forgingadventures

  ClientElbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      UnhealthyThresholdCount: 3
      Port: 3000
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 15
      TargetType: ip
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: forgingadventures
        - Key: StackName
          Value: !Ref AWS::StackName

  ApiElbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 4
      UnhealthyThresholdCount: 3
      Port: 3001
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 15
      TargetType: ip
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: forgingadventures
        - Key: StackName
          Value: !Ref AWS::StackName

  ElbHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref ClientElbTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ClientElb
      Port: 80
      Protocol: HTTP

  ElbHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref SslCertificateArn
      DefaultActions:
        - TargetGroupArn: !Ref ClientElbTargetGroup
          Type: forward
      LoadBalancerArn: !Ref Elb
      Port: 443
      Protocol: HTTPS

  HttpsApiRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ApiElbTargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - /api/*
      ListenerArn: !Ref ElbHttpsListener
      Priority: 20

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "forgingadventures-${Environment}"

Outputs:
  ClusterName:
    Description: The ECS Cluster Name
    Value: !Ref Cluster
  ApiElbTargetGroup:
    Description: API Target Group
    Value: !Ref ApiElbTargetGroup
  ElbDns:
    Description: "App Load Balancer DNS Name"
    Value: !GetAtt Elb.DNSName
  ClientElbTargetGroup:
    Description: Client Target Group
    Value: !Ref ClientElbTargetGroup
