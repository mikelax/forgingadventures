AWSTemplateFormatVersion: "2010-09-09"
Description: "Client Docker Resources"

Parameters:
  ContainerImage:
    Type: String
    Description: The client ECS Image
  DesiredTaskCount:
    Type: Number
    Description: Desired Task Count
    Default: 1
  ContainerCpu:
    Type: String
    Description: Docker CPU requirements
    Default: 256
  ContainerMemory:
    Type: String
    Description: Docker memory limit
    Default: 512
  ElbTargetGroup:
    Type: String
    Description: ELB Target Group ARN
  VpcSubnetList:
    Type: CommaDelimitedList
    Description: List of VPC subnets to use for cache subnet group
  VpcSecurityGroupList:
    Type: CommaDelimitedList
    Description: List of VPC security group IDs

Conditions:
  SetDesiredTaskCount:
    !Not [ !Equals [ !Ref DesiredTaskCount, -1 ] ]
  SingleTask:
    !Equals [ !Ref DesiredTaskCount, 1 ]

Resources:
  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ClientCloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ecs/forgingadventures/${Environment}/client"
      RetentionInDays: 14

  ClientTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: forgingadventures-client
      ExecutionRoleArn: !Ref EcsTaskExecutionRole
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ContainerDefinitions:
        - Name: client
          Cpu: !Ref ContainerCpu
          Command: [nginx, -g, daemon off;]
          Essential: true
          Image: !Ref ContainerImage
          Memory: !Ref ContainerMemory
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ClientCloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: react-client
          PortMappings:
            - ContainerPort: 3000

  ReactClientService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: !If [ SetDesiredTaskCount, !Ref DesiredTaskCount, !Ref "AWS::NoValue" ]
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: !If [ SingleTask, 0, 100 ]
      LaunchType: FARGATE
      HealthCheckGracePeriodSeconds: 180
      LoadBalancers:
      - ContainerName: client
        ContainerPort: 3000
        TargetGroupArn: !Ref ElbTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups: !Ref VpcSecurityGroupList
          Subnets: !Ref VpcSubnetList
      TaskDefinition: !Ref ClientTaskDefinition

Outputs:
  ClientTaskDefinition:
    Description: Client Task Definition
    Value: !Ref ClientTaskDefinition